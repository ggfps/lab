# -*- coding: utf-8 -*-
"""dl3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kCU8ASfiRy2DxEh9qmdcn8E3H-OIa1J6
"""

import tensorflow as tf
from tensorflow import keras
from keras import layers
from keras.datasets import fashion_mnist

import ssl
ssl._create_default_https_context = ssl._create_unverified_context
# Load the dataset
(x_train, y_train), (x_test, y_test) = fashion_mnist.load_data()

# Normalize the pixel values to be between 0 and 1
x_train = x_train.astype('float32') / 255
x_test = x_test.astype('float32') / 255

# Convert the labels to one-hot encoded vectors
num_classes = 10
y_train = keras.utils.to_categorical(y_train, num_classes)
y_test = keras.utils.to_categorical(y_test, num_classes)

# Build the model
model = keras.Sequential([
    layers.Conv2D(32, (3,3), activation='relu', input_shape=(28,28,1)),
    layers.MaxPooling2D((2,2)),
    layers.Conv2D(64, (3,3), activation='relu'),
    layers.MaxPooling2D((2,2)),
    layers.Flatten(),
    layers.Dense(128, activation='relu'),
    layers.Dense(num_classes, activation='softmax')
])

# Compile the model
model.compile(optimizer='adam',
              loss='categorical_crossentropy',
              metrics=['accuracy'])

# Train the model
model.fit(x_train.reshape(-1,28,28,1), y_train, epochs=10, batch_size=32, validation_data=(x_test.reshape(-1,28,28,1), y_test))

# Evaluate the model
test_loss, test_acc = model.evaluate(x_test.reshape(-1,28,28,1), y_test, verbose=2)
print('Test accuracy:', test_acc)
